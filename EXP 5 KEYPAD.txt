--------------------------------------------------------------------------------
-- Company: 
-- Engineer:
--
-- Create Date:   11:53:05 06/30/2022
-- Design Name:   
-- Module Name:   D:/VLSI_Sample_Programs/Keypad_interface/keypad_test.vhd
-- Project Name:  Keypad_interface
-- Target Device:  
-- Tool versions:  
-- Description:   
-- 
-- VHDL Test Bench Created by ISE for module: keypad_interface
-- 
-- Dependencies:
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Notes: 
-- This testbench has been automatically generated using types std_logic and
-- std_logic_vector for the ports of the unit under test.  Xilinx recommends
-- that these types always be used for the top-level I/O of a design in order
-- to guarantee that the testbench will bind correctly to the post-implementation 
-- simulation model.
--------------------------------------------------------------------------------
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
use IEEE.std_logic_arith.all;
use IEEE.std_logic_unsigned.all;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY keypad_test IS
END keypad_test;
 
ARCHITECTURE behavior OF keypad_test IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT keypad_interface
    PORT(
         clk : IN  std_logic;
         reset : IN  std_logic;
         rows : IN  std_logic_vector(3 downto 0);
         Columns : OUT  std_logic_vector(3 downto 0);
         key_press : OUT  std_logic;
         seg_en : OUT  std_logic_vector(5 downto 0);
         seg_disp : OUT  std_logic_vector(7 downto 0)
        );
    END COMPONENT;
    

   --Inputs
   signal clk : std_logic := '0';
   signal reset : std_logic := '0';
   signal rows : std_logic_vector(3 downto 0) := (others => '0');

 	--Outputs
   signal Columns : std_logic_vector(3 downto 0);
   signal key_press : std_logic;
   signal seg_en : std_logic_vector(5 downto 0);
   signal seg_disp : std_logic_vector(7 downto 0);

   -- Clock period definitions
   constant clk_period : time := 2 ns;
	constant clk_period_100Hz 		: time := 200 ns;
	signal clk_100Hz	: std_logic := '0';
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: keypad_interface PORT MAP (
          clk => clk,
          reset => reset,
          rows => rows,
          Columns => Columns,
          key_press => key_press,
          seg_en => seg_en,
          seg_disp => seg_disp
        );

   -- Clock process definitions
   clk <= not clk after clk_period/2;
	clk_100Hz <= not clk_100Hz after clk_period_100Hz/2;
	
	-- reset definitions
	reset <= '1', '0' after clk_period * 2;
 
 
	

   -- Stimulus process
   stim_proc: process
   begin		
		rows <= "1110";
      wait for 100 ns;

		rows <= "1111";
		wait for 100 ns;
		
		rows <= "1101";
      wait for 100 ns;

		rows <= "1111";
		wait for 100 ns;
		
		rows <= "1011";
      wait for 100 ns;

		rows <= "1111";
		wait for 100 ns;
		
		rows <= "0111";
      wait for 100 ns;

		rows <= "1111";
		wait for 100 ns;

     

      -- insert stimulus here 

    --  wait;
   end process;

END;