--------------------------------------------------------------------------------
-- Company: 
-- Engineer:
--
-- Create Date:   11:53:05 06/30/2022
-- Design Name:   
-- Module Name:   D:/VLSI_Sample_Programs/fifo/fifo.vhd
-- Project Name:  Keypad_interface
-- Target Device:  
-- Tool versions:  
-- Description:   
-- 
-- VHDL Test Bench Created by ISE for module: keypad_interface
-- 
-- Dependencies:
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Notes: 
-- This testbench has been automatically generated using types std_logic and
-- std_logic_vector for the ports of the unit under test.  Xilinx recommends
-- that these types always be used for the top-level I/O of a design in order
-- to guarantee that the testbench will bind correctly to the post-implementation 
-- simulation model.
-------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
USE IEEE.NUMERIC_STD.ALL;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY FIFO_Memory_Test IS
END FIFO_Memory_Test;
 
ARCHITECTURE behavior OF FIFO_Memory_Test IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT STD_FIFO
    PORT(
         CLK : IN  std_logic;
         RST : IN  std_logic;
         WriteEn : IN  std_logic;
         DataIn : IN  std_logic_vector(3 downto 0);
         ReadEn : IN  std_logic;
         DataOut : OUT  std_logic_vector(3 downto 0);
         Empty : OUT  std_logic;
         Full : OUT  std_logic
        );
    END COMPONENT;
    

   --Inputs
   signal CLK : std_logic := '0';
   signal RST : std_logic := '0';
   signal WriteEn : std_logic := '0';
   signal DataIn : std_logic_vector(3 downto 0) := (others => '0');
   signal ReadEn : std_logic := '0';

 	--Outputs
   signal DataOut : std_logic_vector(3 downto 0);
   signal Empty : std_logic;
   signal Full : std_logic;

   -- Clock period definitions
   constant CLK_period : time := 10 ns;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: STD_FIFO PORT MAP (
          CLK => CLK,
          RST => RST,
          WriteEn => WriteEn,
          DataIn => DataIn,
          ReadEn => ReadEn,
          DataOut => DataOut,
          Empty => Empty,
          Full => Full
        );

   -- Clock definitions
		CLK <= not CLK after CLK_period/2;
		
	-- Reset process
		RST <= '1', '0' after CLK_period * 3;
	
	-- Write process
	wr_proc : process
		variable counter : std_logic_vector (3 downto 0) := (others => '0');
	begin		
		wait for CLK_period * 5;
		for i in 1 to 32 loop
			counter := counter + 1;
			DataIn <= counter;
			wait for CLK_period * 1;
			WriteEn <= '1';
			wait for CLK_period * 1;
			WriteEn <= '0';
		end loop;
		
		wait for clk_period * 10;
		for i in 1 to 32 loop
			counter := counter + 1;
			DataIn <= counter;
			wait for CLK_period * 1;
			WriteEn <= '1';
			wait for CLK_period * 1;
			WriteEn <= '0';
		end loop;
		
		wait;
	end process;
	
	-- Read process
	rd_proc : process
	begin
		wait for CLK_period * 20;
		ReadEn <= '1';
		wait for CLK_period * 20;
		ReadEn <= '0';
		wait for CLK_period * 20;
		ReadEn <= '1';
		wait;
	endÂ process;


END;